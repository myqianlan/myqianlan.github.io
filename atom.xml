<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[myqianlan]]></title>
  <subtitle><![CDATA[走走停停    不忘初心]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://myqianlan.com/"/>
  <updated>2014-11-26T07:28:12.742Z</updated>
  <id>http://myqianlan.com/</id>
  
  <author>
    <name><![CDATA[myqianlan]]></name>
    <email><![CDATA[linquantan@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[如何使用javascript书写递归函数]]></title>
    <link href="http://myqianlan.com/2014/11/25/write-recursive-function-in-javascript/"/>
    <id>http://myqianlan.com/2014/11/25/write-recursive-function-in-javascript/</id>
    <published>2014-11-25T08:57:00.000Z</published>
    <updated>2014-11-26T07:11:54.000Z</updated>
    <content type="html"><![CDATA[<p>递归函数大家都应该比较熟吧？那么，如何在javascript中书写一个完美的递归函数呢？且听我娓娓道来。<a id="more"></a></p>
<h2 id="递归函数">递归函数</h2>
<p>写的时候，查了一下维基百科对<a href="http://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0" target="_blank" rel="external">递归函数</a>的定义，恕我愚钝，简直太深奥了！所以，我还是简单的说说我对递归函数的理解吧。递归函数，说白了就是在函数内部引用函数自身，最终到给定的递归结束条件时回溯。当然，你也可以不给定结束条件，死了别挂我~(╯﹏╰)~</p>
<h2 id="使用javascript书写递归函数">使用javascript书写递归函数</h2>
<p>现在，一步一步，摩擦摩擦，在皎洁的编辑器上，来开始使用javascript写递归函数吧！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(num)</span></span>{</div><div class="line">    <span class="keyword">if</span>(num &lt;= <span class="number">1</span>){</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    } <span class="keyword">else</span>{</div><div class="line">    <span class="keyword">return</span> num * fun(--num); </div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>好了，不错，一个堪称经典的递归求阶乘的函数诞生了。事情肯定不会这么顺利，一定是个圈套。我们来如下调用以下看看会怎么样？</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test = fun;</div><div class="line">fun = <span class="literal">null</span>;</div><div class="line"><span class="built_in">console</span>.log(test(<span class="number">7</span>));</div></pre></td></tr></table></figure>

<p>呵呵，居然报错了</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Uncaught <span class="built_in">TypeError</span>: object is not a <span class="function"><span class="keyword">function</span></span></div></pre></td></tr></table></figure>

<p>嗯，报了类型错误。。。</p>
<p>回过头去看看我们是如何调用的。发现问题了吧！我们把fun赋给了test，然后把fun给回收掉了。为什么会出错呢？因为像function这种赋值其实是引用传递，只是把指向函数的指针（这里说地址也行）赋给test了。但我们把fun赋值为null的时候，函数都已经被回收了，拿什么来执行？知道问题所在了，我决定换种方式来定义：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(num)</span></span>{</div><div class="line">    <span class="keyword">if</span>(num &lt;= <span class="number">1</span>){</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    } <span class="keyword">else</span>{</div><div class="line">    <span class="keyword">return</span> num * <span class="built_in">arguments</span>.callee(--num); </div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>然后测试一下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test = fun;</div><div class="line">fun = <span class="literal">null</span>;</div><div class="line"><span class="built_in">console</span>.log(test(<span class="number">7</span>));</div></pre></td></tr></table></figure>

<p>OK，测试通过！</p>
<p>但是在某一天，当我实际码代码的时候，问题又出现了。什么问题呢？我们来看一下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Uncaught <span class="built_in">TypeError</span>: <span class="string">'caller'</span>, <span class="string">'callee'</span>, and <span class="string">'arguments'</span> properties may not be accessed on strict mode functions or the <span class="built_in">arguments</span> objects <span class="keyword">for</span> calls to them</div></pre></td></tr></table></figure>

<p>╮(╯▽╰)╭哎！可怜啊！因为我使用了<strong>“use strict”</strong>！严格模式下是不允许的。。。</p>
<p>好吧！继续想办法！既然不能使用arguments.callee()，那还是想想其他的方式吧。</p>
<p>看下面的代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fun = (<span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">(num)</span></span>{</div><div class="line">    <span class="keyword">if</span>(num &lt;= <span class="number">1</span>){</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">    } <span class="keyword">else</span>{</div><div class="line">    <span class="keyword">return</span> num * f(--num); </div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<p>然后我测试了以下，神奇的通过了，暂时没有发现任何问题！</p>
<p>为什么呢？因为我们使用了“（）”，巧妙地使用命名函数表达式来达到了同样的效果。</p>
<h2 id="参考资料">参考资料</h2>
<ol>
<li><strong>《JavaScript高级程序设计（第三版）》</strong></li>
<li><strong>《JavaScript启示录》</strong></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>递归函数大家都应该比较熟吧？那么，如何在javascript中书写一个完美的递归函数呢？且听我娓娓道来。]]>
    
    </summary>
    
      <category term="javascript" scheme="http://myqianlan.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[极其简单的使用基于gulp和sass前端工作流]]></title>
    <link href="http://myqianlan.com/2014/11/19/a-simple-workflow-with-gulp-and-sass/"/>
    <id>http://myqianlan.com/2014/11/19/a-simple-workflow-with-gulp-and-sass/</id>
    <published>2014-11-19T09:23:04.000Z</published>
    <updated>2014-11-20T02:03:57.000Z</updated>
    <content type="html"><![CDATA[<p>简单的记录自己如何在实际工作中使用gulp和sass的。我的原则是，小而美！<a id="more"></a></p>
<h2 id="gulp与sass介绍">gulp与sass介绍</h2>
<h3 id="gulp">gulp</h3>
<p>什么是gulp?和Grunt一样，是一种任务管理工具；和Grunt又不一样，gulp是一种基于流的，代码优于配置的新一代构建工具。</p>
<p>Gulp 和 Grunt 类似，但相比于Grunt的频繁的IO操作，Gulp的流操作，能更快地完成构建。</p>
<h3 id="sass">sass</h3>
<p>Sass是”<em>Syntactically Awesome StyleSheets</em>“的简称。如同less,stylus一样，是“CSS预处理器”中的一种，你可以称其是工具或者是语言。在我看来，sass除了不够小而美以外，确实是很强大的。Sass官网上是这么来描述的：</p>
<blockquote>
<p>Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use variables, nested rules, mixins, inline imports, and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of the Compass style library.</p>
</blockquote>
<h3 id="如何安装gulp与sass">如何安装gulp与sass</h3>
<p>自己上网谷歌或者百度去！</p>
<h2 id="使用的包">使用的包</h2>
<p>一部分是gulp插件，一部分是开启本地服务器所需要的。</p>
<ul>
<li>gulp-sass</li>
<li>gulp-sourcemaps</li>
<li>gulp-uglify</li>
<li>gulp-minifycss</li>
<li>gulp-rename</li>
<li>gulp-autoprefixer</li>
<li>http</li>
<li>connect</li>
<li>open</li>
</ul>
<p>package.json文件内容</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">  <span class="string">"name"</span>: <span class="string">"f2e-workflow"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"0.1.0"</span>,</div><div class="line">  <span class="string">"description"</span>: <span class="string">"a f2e workflow with gulp and sass"</span>,</div><div class="line">  <span class="string">"main"</span>: <span class="string">"gulpfile.js"</span>,</div><div class="line">  <span class="string">"scripts"</span>: {</div><div class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" && exit 1"</span></div><div class="line">  },</div><div class="line">  <span class="string">"author"</span>: <span class="string">"myqianlan (linquantan@gmail.com)"</span>,</div><div class="line">  <span class="string">"license"</span>: <span class="string">"MIT"</span>,</div><div class="line">  <span class="string">"devDependencies"</span>: {</div><div class="line">    <span class="string">"connect"</span>: <span class="string">"~2.12.0"</span>,</div><div class="line">    <span class="string">"gulp"</span>: <span class="string">"^3.8.8"</span>,</div><div class="line">    <span class="string">"gulp-autoprefixer"</span>: <span class="string">"^1.0.1"</span>,</div><div class="line">    <span class="string">"gulp-clean"</span>: <span class="string">"^0.3.1"</span>,</div><div class="line">    <span class="string">"gulp-minify-css"</span>: <span class="string">"^0.3.10"</span>,</div><div class="line">    <span class="string">"gulp-rename"</span>: <span class="string">"^1.2.0"</span>,</div><div class="line">    <span class="string">"gulp-sass"</span>: <span class="string">"^1.1.0"</span>,</div><div class="line">    <span class="string">"gulp-sourcemaps"</span>: <span class="string">"^1.2.8"</span>,</div><div class="line">    <span class="string">"gulp-uglify"</span>: <span class="string">"^1.0.1"</span>,</div><div class="line">    <span class="string">"open"</span>: <span class="string">"~0.0.4"</span></div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="gulp任务管理">gulp任务管理</h2>
<p>通过gulp做了如下任务：</p>
<ul>
<li>sass编译，并且生成sourcemap,方便调试</li>
<li>自动添加浏览器前缀</li>
<li>css、js文件压缩</li>
<li>本地服务器</li>
<li>自动监听</li>
</ul>
<p>gulpfile.js文件内容</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @author myqianlan</div><div class="line"> * @date 2014年11月19日17:12:44</div><div class="line"> */</div><div class="line"><span class="comment">// 包含gulp   </span></div><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 包含插件   </span></div><div class="line"><span class="comment">// sass 编译</span></div><div class="line"><span class="keyword">var</span> sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>);</div><div class="line"><span class="comment">//sourcemaps</span></div><div class="line"><span class="keyword">var</span> sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</div><div class="line"><span class="comment">// 压缩JS</span></div><div class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</div><div class="line"><span class="comment">// 压缩CSS</span></div><div class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</div><div class="line"><span class="comment">// 重命名</span></div><div class="line"><span class="keyword">var</span> rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>);</div><div class="line"><span class="comment">// 自动加CSS浏览器前缀</span></div><div class="line"><span class="keyword">var</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Server</span></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">var</span> connect = <span class="built_in">require</span>(<span class="string">'connect'</span>);</div><div class="line"><span class="keyword">var</span> open = <span class="built_in">require</span>(<span class="string">'open'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Server Settings</span></div><div class="line"><span class="keyword">var</span> root = <span class="string">'./app'</span>;</div><div class="line"><span class="keyword">var</span> port = <span class="number">3000</span>;</div><div class="line"><span class="keyword">var</span> host = <span class="string">'localhost'</span>;</div><div class="line"><span class="keyword">var</span> protocol = <span class="string">'http'</span>;</div><div class="line"></div><div class="line">gulp.task(<span class="string">'server'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    <span class="keyword">var</span> app = connect().use(connect.static(root));</div><div class="line"></div><div class="line">    http.createServer(app).listen(port);</div><div class="line">    open(protocol + <span class="string">'://'</span> + host + <span class="string">':'</span> + port + <span class="string">'/index.html'</span>);</div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// Compile SASS  </span></div><div class="line"><span class="comment">// with node sass</span></div><div class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    gulp.src(root + <span class="string">'/scss/**/*.scss'</span>)</div><div class="line">        .pipe(sourcemaps.init())</div><div class="line">        .pipe(sass({</div><div class="line">            errLogToConsole: <span class="literal">true</span></div><div class="line">        }))</div><div class="line">        .pipe(sourcemaps.write(<span class="string">'./maps'</span>,{debug: <span class="literal">true</span>, includeContent: <span class="literal">false</span>}))</div><div class="line">        .pipe(gulp.dest(root + <span class="string">'/css'</span>));</div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// 自动添加浏览器前缀</span></div><div class="line"><span class="comment">// By default, Autoprefixer uses &gt; 1%, last 2 versions, Firefox ESR, Opera 12.1</span></div><div class="line">gulp.task(<span class="string">'autoprefixer'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    gulp.src(root + <span class="string">'/css/**/*.css'</span>)</div><div class="line">        .pipe(autoprefixer())</div><div class="line">        .pipe(gulp.dest(root + <span class="string">'/css'</span>));</div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// 压缩JS文件 </span></div><div class="line">gulp.task(<span class="string">'minifyjs'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    gulp.src(root + <span class="string">'/js/**/*.js'</span>)</div><div class="line">        .pipe(uglify())</div><div class="line">        .pipe(rename({ suffix: <span class="string">'.min'</span> }))</div><div class="line">        .pipe(gulp.dest(root + <span class="string">'/dist/js'</span>));</div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// 压缩CSS文件   </span></div><div class="line">gulp.task(<span class="string">'minifycss'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    gulp.src(root + <span class="string">'/css/**/*.css'</span>)</div><div class="line">        .pipe(minifycss())</div><div class="line">        .pipe(rename({ suffix: <span class="string">'.min'</span> }))</div><div class="line">        .pipe(gulp.dest(root +<span class="string">'/dist/css'</span>));</div><div class="line">});</div><div class="line"><span class="comment">//</span></div><div class="line">gulp.task(<span class="string">'dev'</span>, [<span class="string">'sass'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    <span class="comment">// 监视scss文件的变化,并且执行sass</span></div><div class="line">    <span class="comment">// 如果scss文件夹为空，任务会中断</span></div><div class="line">    gulp.watch(root + <span class="string">'/scss/**/*.scss'</span>, [<span class="string">'sass'</span>]);</div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// 默认任务   </span></div><div class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'sdev'</span>]);</div><div class="line"></div><div class="line"><span class="comment">// 开发任务</span></div><div class="line">gulp.task(<span class="string">'sdev'</span>, [<span class="string">'sass'</span>, <span class="string">'server'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line"></div><div class="line">    <span class="comment">// 监视scss文件的变化,并且执行sass</span></div><div class="line">    gulp.watch(root + <span class="string">'/scss/**/*.scss'</span>, [<span class="string">'sass'</span>]);</div><div class="line">});</div><div class="line"><span class="comment">// 不带本地服务器</span></div><div class="line">gulp.task(<span class="string">'dev'</span>, [<span class="string">'sass'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line"></div><div class="line">    <span class="comment">// 监视scss文件的变化,并且执行sass</span></div><div class="line">    gulp.watch(root + <span class="string">'/scss/**/*.scss'</span>, [<span class="string">'sass'</span>]);</div><div class="line">});</div><div class="line"><span class="comment">// 构建任务</span></div><div class="line">gulp.task(<span class="string">'build'</span>, [<span class="string">'minifyjs'</span>, <span class="string">'sass'</span>, <span class="string">'autoprefixer'</span>, <span class="string">'minifycss'</span>]);</div></pre></td></tr></table></figure>

<h2 id="如何使用">如何使用</h2>
<ul>
<li><p>首先，确保已经安装nodejs（nodejs如何安装？O(∩_∩)O~呵呵）。</p>
</li>
<li><p>然后，全局安装gulp</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp -g</div></pre></td></tr></table></figure>

<ul>
<li>clone到本地</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/myqianlan/f2e-workflow.git</div></pre></td></tr></table></figure>

<ul>
<li>下载依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> f2e-workflow</div><div class="line">npm install</div></pre></td></tr></table></figure>

<ul>
<li>运行<ul>
<li>带本地服务器的任务</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp sdev</div></pre></td></tr></table></figure>

<ul>
<li>不带带本地服务器的任务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp dev</div></pre></td></tr></table></figure>

<ul>
<li>最后的构建任务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp build</div></pre></td></tr></table></figure>

<h2 id="说明">说明</h2>
<p>我知道这个流程不够强大，但却是最适合我的。期间，我也折腾过各种高大上的流程，但通通都不了了之。所以，大道至简。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>简单的记录自己如何在实际工作中使用gulp和sass的。我的原则是，小而美！]]>
    
    </summary>
    
      <category term="gulp" scheme="http://myqianlan.com/tags/gulp/"/>
    
      <category term="sass" scheme="http://myqianlan.com/tags/sass/"/>
    
      <category term="教程" scheme="http://myqianlan.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git基本命令和GitFlow工作流]]></title>
    <link href="http://myqianlan.com/2014/11/15/git-tips-and-gitflow/"/>
    <id>http://myqianlan.com/2014/11/15/git-tips-and-gitflow/</id>
    <published>2014-11-15T06:08:44.000Z</published>
    <updated>2014-11-17T07:53:07.000Z</updated>
    <content type="html"><![CDATA[<p>本篇博客讲解了git的一些基本的团队协作命令，和GitFlow工作流指南<a id="more"></a></p>
<h2 id="git_团队协作的一些命令">git 团队协作的一些命令</h2>
<ul>
<li><strong>1.开分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git branch 新分支名</div><div class="line">例如，在master分支下，新开一个开发分支：</div><div class="line">git branch dev</div></pre></td></tr></table></figure>

<ul>
<li><strong>2.切换到新分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git checkout 分支名</div><div class="line">例如，在master分支下，切换到新开的dev：</div><div class="line">git checkout dev</div></pre></td></tr></table></figure>

<ul>
<li><strong>3.开分支和切换分支合并到一个命令</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git checkout -b 新分支名</div><div class="line">例如，新开一个开发分支，并立即切换到该分支：</div><div class="line">git checkout -b dev</div></pre></td></tr></table></figure>

<ul>
<li><strong>4.切换回原分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout 原分支名</div><div class="line">例如，切换回master</div><div class="line">git checkout master</div><div class="line">注意：当前分支有修改，还未commit的时候，会切换失败，应当先commit，但可以不用push</div></pre></td></tr></table></figure>

<ul>
<li><strong>5.合并分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git merge 需要合并的分支名</div><div class="line">例如，刚刚已经切换回master，现在需要合并dev的内容：</div><div class="line">git merge dev</div><div class="line">建议在GitLab(或者其他git系统)上面创建merge request的形式来进行分支的合并和代码审核。</div></pre></td></tr></table></figure>

<ul>
<li><strong>6.查看本地分支列表</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch <span class="operator">-a</span></div><div class="line">前面带remotes/origin 的，是远程分支</div></pre></td></tr></table></figure>

<ul>
<li><strong>7.查看远程分支列表</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -r</div></pre></td></tr></table></figure>

<ul>
<li><strong>8.向远程提交本地新开的分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git push origin 新分支名</div><div class="line">例如，刚刚在master下新开的dev分支：</div><div class="line">git push origin dev</div></pre></td></tr></table></figure>

<ul>
<li><strong>9.删除远程分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git push origin :远程分支名</div><div class="line">例如，删除刚刚提交到远程的dev分支：</div><div class="line">git push origin :dev</div></pre></td></tr></table></figure>

<ul>
<li><strong>10.删除本地分支</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git branch 分支名称 <span class="operator">-d</span></div><div class="line">例如，在master分支下，删除新开的dev分支：</div><div class="line">git branch dev <span class="operator">-d</span></div><div class="line">注意：如果dev的更改，push到远程，在GitLab(或者其他git系统)上面进行了merge操作，但是本地master没有pull最新的代码，会删除不成功，可以先git pull origin master，或者强制删除</div><div class="line">git branch dev -D</div></pre></td></tr></table></figure>

<ul>
<li><strong>11.更新分支列表信息</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git fetch -p</div></pre></td></tr></table></figure>

<ul>
<li><p><strong>12.TortoiseGit(乌龟git)</strong></p>
<pre><code>  不可否认，在windows下，这个是个不错的工具。不管你是命令行新手还是重度使用者，我觉得都可以尝试一下。
</code></pre></li>
</ul>
<h2 id="Git工作流指南：Gitflow工作流">Git工作流指南：Gitflow工作流</h2>
<p>在你开始阅读之前，请记住：流程应被视作为指导方针，而非“铁律”。我们只是想告诉你可能的做法。因此，如果有必要的话，你可以组合使用不同的流程</p>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflows-gitflow.png" alt="图一"></p>
<p>Gitflow工作流定义了一个围绕项目发布的严格分支模型。虽然比功能分支工作流复杂几分，但提供了用于一个健壮的用于管理大型项目的框架。</p>
<p>Gitflow工作流没有用超出功能分支工作流的概念和命令，而是为不同的分支分配一个很明确的角色，并定义分支之间如何和什么时候进行交互。除了使用功能分支，在做准备、维护和记录发布也使用各自的分支。当然你可以用上功能分支工作流所有的好处：Pull Requests、隔离实验性开发和更高效的协作。</p>
<h3 id="工作方式">工作方式</h3>
<p>Gitflow工作流仍然用中央仓库作为所有开发者的交互中心。和其它的工作流一样，开发者在本地工作并push分支到要中央仓库中。</p>
<h3 id="历史分支">历史分支</h3>
<p>相对使用仅有的一个master分支，Gitflow工作流使用2个分支来记录项目的历史。master分支存储了正式发布的历史，而develop分支作为功能的集成分支。这样也方便master分支上的所有提交分配一个版本号。</p>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-1historical.png" alt="图二"></p>
<p>剩下要说明的问题围绕着这2个分支的区别展开。</p>
<h3 id="功能分支">功能分支</h3>
<p>每个新功能位于一个自己的分支，这样可以push到中央仓库以备份和协作。但功能分支不是从master分支上拉出新分支，而是使用develop分支作为父分支。当新功能完成时，合并回develop分支。新功能提交应该从不直接与master分支交互。</p>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-2feature.png" alt="图三"></p>
<blockquote>
<p>注意，从各种含义和目的上来看，功能分支加上develop分支就是功能分支工作流的用法。但Gitflow工作流没有在这里止步。</p>
</blockquote>
<h3 id="发布分支">发布分支</h3>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-3release.png" alt="图四"></p>
<p>一旦develop分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从develop分支上fork一个发布分支。新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上 —— 这个分支只应该做Bug修复、文档生成和其它面向发布任务。一旦对外发布的工作都完成了，发布分支合并到master分支并分配一个版本号打好Tag。另外，这些从新建发布分支以来的做的修改要合并回develop分支。</p>
<p>使用一个用于发布准备的专门分支，使得一个团队可以在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。<br>这也打造定义良好的开发阶段（比如，可以很轻松地说，『这周我们要做准备发布版本4.0』，并且在仓库的目录结构中可以实际看到）。</p>
<h3 id="常用的分支约定：">常用的分支约定：</h3>
<blockquote>
<p>用于新建发布分支的分支: develop</p>
<p>用于合并的分支: master</p>
<p>分支命名: release-<em> 或 release/</em></p>
</blockquote>
<h3 id="维护分支">维护分支</h3>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-4maintenance.png" alt="图五"></p>
<p>维护分支或说是热修复（hotfix）分支用于生成快速给产品发布版本（production releases）打补丁，这是唯一可以直接从master分支fork出来的分支。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。</p>
<p>为Bug修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。你可以把维护分支想成是一个直接在master分支上处理的临时发布。</p>
<h3 id="示例">示例</h3>
<p>下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。</p>
<h4 id="创建开发分支"><em>创建开发分支</em></h4>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-5createdev.png" alt="图六"></p>
<p>第一步为master分支配套一个develop分支。简单来做可以本地创建一个空的develop分支，push到服务器上：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch develop</div><div class="line">git push -u origin develop</div></pre></td></tr></table></figure>

<p>以后这个分支将会包含了项目的全部历史，而master分支将只包含了部分历史。其它开发者这时应该克隆中央仓库，建好develop分支的跟踪分支：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone ssh://user@host/path/to/repo.git</div><div class="line">git checkout -b develop origin/develop</div></pre></td></tr></table></figure>

<p>现在每个开发都有了这些历史分支的本地拷贝。</p>
<h4 id="工程师A和工程师B开始开发新功能"><em>工程师A和工程师B开始开发新功能</em></h4>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-6maryjohnbeginnew.png" alt="图七"></p>
<p>这个示例中，工程师A和工程师B开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于master分支，而是应该基于develop分支：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b some-feature develop</div></pre></td></tr></table></figure>

<p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git status</div><div class="line">git add</div><div class="line">git commit</div></pre></td></tr></table></figure>

<h4 id="工程师A完成功能开发"><em>工程师A完成功能开发</em></h4>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-7maryfinishes.png" alt="图八"></p>
<p>添加了提交后，工程师A觉得她的功能OK了。如果团队使用Pull Requests，这时候可以发起一个用于合并到develop分支。否则她可以直接合并到她本地的develop分支后push到中央仓库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git pull origin develop</div><div class="line">git checkout develop</div><div class="line">git merge some-feature</div><div class="line">git push</div><div class="line">git branch <span class="operator">-d</span> some-feature</div></pre></td></tr></table></figure>

<p>第一条命令在合并功能前确保develop分支是最新的。注意，功能决不应该直接合并到master分支。冲突解决方法和集中式工作流一样。</p>
<h4 id="工程师A开始准备发布"><em>工程师A开始准备发布</em></h4>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-8maryprepsrelease.png" alt="图九"></p>
<p>这个时候工程师B正在实现他的功能，工程师A开始准备她的第一个项目正式发布。像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b release-<span class="number">0.1</span> develop</div></pre></td></tr></table></figure>

<p>这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。</p>
<p>只要工程师A创建这个分支并push到中央仓库，这个发布就是功能冻结的。任何不在develop分支中的新功能都推到下个发布循环中。</p>
<h4 id="工程师A完成发布"><em>工程师A完成发布</em></h4>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-release-cycle-9maryfinishes.png" alt="图十"></p>
<p>一旦准备好了对外发布，工程师A合并修改到master分支和develop分支上，删除发布分支。合并回develop分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。另外，如果工程师A的团队要求Code Review，这是一个发起Pull Request的理想时机。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git checkout master</div><div class="line">git merge release-<span class="number">0.1</span></div><div class="line">git push</div><div class="line">git checkout develop</div><div class="line">git merge release-<span class="number">0.1</span></div><div class="line">git push</div><div class="line">git branch <span class="operator">-d</span> release-<span class="number">0.1</span></div></pre></td></tr></table></figure>

<p>发布分支是作为功能开发（develop分支）和对外发布（master分支）间的缓冲。只要有合并到master分支，就应该打好Tag以方便跟踪。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git tag <span class="operator">-a</span> <span class="number">0.1</span> -m <span class="string">"Initial public release"</span> master</div><div class="line">git push --tags</div></pre></td></tr></table></figure>

<p>Git有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你push中央仓库的master分支时，自动构建好对外发布。</p>
<h4 id="最终用户发现Bug"><em>最终用户发现Bug</em></h4>
<p><img src="http://myqianlan.qiniudn.com/blog/2014/11/15/git-workflow-gitflow-enduserbug.png" alt="图十一"></p>
<p>对外发布后，工程师A回去和工程师B一起做下个发布的新功能开发，直到有最终用户开了一个Ticket抱怨当前版本的一个Bug。为了处理Bug，工程师A（或工程师B）从master分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回master分支：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b issue-<span class="comment">#001 master</span></div></pre></td></tr></table></figure>

<p>Fix the bug</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git checkout master</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div></pre></td></tr></table></figure>

<p>就像发布分支，维护分支中新加这些重要修改需要包含到develop分支中，所以工程师A要执行一个合并操作。然后就可以安全地删除这个分支了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout develop</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div><div class="line">git branch <span class="operator">-d</span> issue-<span class="comment">#001</span></div></pre></td></tr></table></figure>

<h2 id="最后">最后</h2>
<p>Git是一个不错的版本管理工具，但也仅仅是工具。记住，这里演示的工作流只是可能用法的例子，而不是在实际工作中使用Git不可违逆的条例。所以不要畏惧按自己需要对工作流的用法做取舍。不变的目标就是让Git为你所用。</p>
<h2 id="参考资料">参考资料</h2>
<ol>
<li><strong>Comparing Workflows</strong> <a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow/" target="_blank" rel="external">https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow/</a></li>
<li><strong>Git 版本控制系統</strong> <a href="http://ihower.tw/git/index.html" target="_blank" rel="external">http://ihower.tw/git/index.html</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>本篇博客讲解了git的一些基本的团队协作命令，和GitFlow工作流指南]]>
    
    </summary>
    
      <category term="git" scheme="http://myqianlan.com/tags/git/"/>
    
      <category term="教程" scheme="http://myqianlan.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[常用终端命令]]></title>
    <link href="http://myqianlan.com/2014/11/14/terminal-common-used-commands/"/>
    <id>http://myqianlan.com/2014/11/14/terminal-common-used-commands/</id>
    <published>2014-11-14T13:57:08.000Z</published>
    <updated>2014-11-14T14:47:18.000Z</updated>
    <content type="html"><![CDATA[<p>一些自己收集的终端常用命令<a id="more"></a></p>
<h2 id="关于Linux文件和目录的命令">关于Linux文件和目录的命令</h2>
<ul>
<li>ls 列出当前目录文件（不包括隐含文件）</li>
<li>ls -a 列出当前目录文件（包括隐含文件）</li>
<li>ls -l 列出当前目录下文件的详细信息</li>
<li>cd .. 回当前目录的上一级目录</li>
<li>cd – 回上一次所在的目录</li>
<li>cd ~ 或 cd 回当前用户的宿主目录</li>
<li>mkdir 目录名 创建一个目录</li>
<li>rmdir 空目录名 删除一个空目录</li>
<li>rm 文件名 文件名 删除一个文件或多个文件</li>
<li>rm -rf 非空目录名 删除一个非空目录下的一切</li>
<li>mv 路经/文件 /经/文件移动相对路经下的文件到绝对路经下</li>
<li>mv 文件名 新名称 在当前目录下改名</li>
</ul>
<h2 id="DOS_常用命令">DOS 常用命令</h2>
<ul>
<li><p>dir 列文件名</p>
<pre><code>  显示目录文件和子目录列表，呵呵，这个当然是人人要知道的。 
  可以使用通配符（? 和 <span class="keyword">*</span>），？表通配一个字符，<span class="keyword">*</span>表通配任意字符 
  <span class="keyword">*</span>.后缀 
  指定要查看后缀的文件。 上面其实也可以为“ . 后缀”,例如dir <span class="keyword">*</span>.exe 等于dir .exe 
  /p 
  每次显示一个列表屏幕。要查看下一屏，请按键盘上的任意键。 
  /w 
  以宽格式显示列表，在每一行上最多显示 5 个文件名或目录名。 
  /s 
  列出指定目录及所有子目录中出现的每个指定的文件名。比win环境下的查找快多了 
  dir <span class="keyword">*</span>.<span class="keyword">*</span> -&gt; a.txt 把当前目录文件列表写入a.txt 
  dir <span class="keyword">*</span>.<span class="keyword">*</span> /s -&gt; a.txt 把当前目录文件列表写入a.txt，包括子目录下文件。
</code></pre></li>
<li>deltree 删除目录树 </li>
<li>cls 清屏 </li>
<li>cd 改变当前目录  </li>
<li>copy 拷贝文件  </li>
<li>del 删除文件   </li>
<li>move 移动文件、改目录名 </li>
<li>more 分屏显示 </li>
<li>type 显示文件内容 </li>
<li>time 显示及修改时间  </li>
<li><p>tree 列目录树 </p>
<pre><code>  tree    表示路径扫描只显示路径，不显示路径下的文件名及扩展名
  tree /f 表示全路径扫描结果中包含文件名及扩展名
  tree /f D:\ &gt;<span class="keyword">LIST</span>.txt  批处理，对D盘进行全路径扫描，并将结果保存到<span class="keyword">LIST</span>.TXT中，<span class="keyword">LIST</span>所在路径与批处理文件同路径下.
</code></pre></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>一些自己收集的终端常用命令]]>
    
    </summary>
    
      <category term="终端" scheme="http://myqianlan.com/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="命令" scheme="http://myqianlan.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端开发中的一些chrome插件推荐]]></title>
    <link href="http://myqianlan.com/2014/11/13/frontend-usefull-chrome-plugins/"/>
    <id>http://myqianlan.com/2014/11/13/frontend-usefull-chrome-plugins/</id>
    <published>2014-11-13T05:22:52.000Z</published>
    <updated>2014-11-14T05:04:25.000Z</updated>
    <content type="html"><![CDATA[<p>这篇博客推荐的都是谷歌chrome浏览器插件，理论上，与之相同内核的浏览器都能使用。由于是谷歌插件，所以在天朝的网络，你懂的！<a id="more"></a></p>
<h2 id="红杏"><a href="http://honx.in/i/U84lHoIaA2LMm5Ow" target="_blank" rel="external">红杏</a></h2>
<p>专为 学者 、程序员、外贸工作者 打造的上网加速器。我们相信，上网本该如此简单！扯淡了，我相信大家都懂，因为在天朝。不多说，我相信收费的才能得到更好地服务。</p>
<h2 id="有道智能翻译"><a href="https://chrome.google.com/webstore/detail/%E6%9C%89%E9%81%93%E6%99%BA%E8%83%BD%E7%BF%BB%E8%AF%91/fcihnniakiicgonogcieldhhjbgpnjpj" target="_blank" rel="external">有道智能翻译</a></h2>
<p>浏览页面时，点击插件栏按钮, 就可以立刻体验有道网页翻译2.0。网页可以分翻译等级，难词用括号在原文中注释，可以全文翻译。某些网站因为安全原因，可能会使用不了，不过绝大部分网站是可以使用的。</p>
<h2 id="颜文字"><a href="https://chrome.google.com/webstore/detail/%E9%A2%9C%E6%96%87%E5%AD%97/cajbknjkkfkmmcbefnecfmcippoacfao/reviews" target="_blank" rel="external">颜文字</a></h2>
<p>卖萌专用，非诚勿扰。在任意地方快速输入颜文字!史上收录最多的颜文字！ヾ(；ﾟ(OO)ﾟ)ﾉ･ｪ･^=)( =①ω①=)ヾ（＠＾▽＾＠）ノψ(｀∇´)ψ</p>
<h2 id="Postman_-_REST_Client"><a href="https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm" target="_blank" rel="external">Postman - REST Client</a></h2>
<p>Postman是Ajax开发的神器，对于Restful开发方式特别有帮助，可以用来模拟各种请求来测试API的正确性，比如用来模拟Ajax请求。它还支持认证，比如简单的用户名/密码，或者Oauth1.0。安装过后在chrome的app中。</p>
<h2 id="Web_Developer"><a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm/related" target="_blank" rel="external">Web Developer</a></h2>
<p>安装Web Developer扩展后，会在浏览器的工具栏中添加一个按钮，点击该按钮，会弹出各种Web开发工具。此扩展工具的作者同时也是非常流行的Firefox扩展Web Developer extension for Firefox的作者。</p>
<h2 id="ColorZilla"><a href="https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp/related" target="_blank" rel="external">ColorZilla</a></h2>
<p>可以从页面上任何一点获取颜色，维护获取历史等。</p>
<h2 id="Page_Ruler"><a href="https://chrome.google.com/webstore/detail/page-ruler/jlpkojjdgbllmedoapgfodplfhcbnbpn" target="_blank" rel="external">Page Ruler</a></h2>
<p>给你测量一个网站中的任何元素的尺寸（像素宽度和高度）的工具。</p>
<h2 id="Axure_RP_Extension_for_Chrome"><a href="https://chrome.google.com/webstore/detail/axure-rp-extension-for-ch/dogkpdfcklifaemcdfbildhcofnopogp" target="_blank" rel="external">Axure RP Extension for Chrome</a></h2>
<p>Axure RP Pro 是一个产品经理必备的交互原型设计工具，能够高效率制作产品原型，快速绘制线框图、流程图、网站架构图、示意图、HTML 模版等。而这个插件就为了能够使用chrome来查看原型开发的。</p>
<h2 id="Adblock_Plus"><a href="https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb" target="_blank" rel="external">Adblock Plus</a></h2>
<p>Adblock Plus 是世界上最流行的浏览器扩展，世界各地有数百万用户在使用它。这是一个社区驱动的开源项目，有数百名志愿者为 Adblock Plus 的成功作出了贡献，以实现所有烦人的广告被自动阻挡。</p>
<h2 id="结语">结语</h2>
<p>大家有什么好玩的chrome插件也分享分享啊！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这篇博客推荐的都是谷歌chrome浏览器插件，理论上，与之相同内核的浏览器都能使用。由于是谷歌插件，所以在天朝的网络，你懂的！]]>
    
    </summary>
    
      <category term="插件" scheme="http://myqianlan.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="chrome" scheme="http://myqianlan.com/tags/chrome/"/>
    
      <category term="浏览器" scheme="http://myqianlan.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[是时候全面使用html5标签了]]></title>
    <link href="http://myqianlan.com/2014/11/11/right-time-to-use-html5-tags/"/>
    <id>http://myqianlan.com/2014/11/11/right-time-to-use-html5-tags/</id>
    <published>2014-11-11T06:49:08.000Z</published>
    <updated>2014-11-14T05:04:32.000Z</updated>
    <content type="html"><![CDATA[<p>html5，这个词语，不管是业内还是业外，都已经耳熟能详了。因为已经火了这么长的的时间了。但是，真正开始使用的又有多少人呢？只能用呵呵来形容了！<a id="more"></a></p>
<h2 id="html5真的来了">html5真的来了</h2>
<p>2014年10月28日，历经八年，W3C（万维网联盟）终于完成了HTML5标准的制定工作，html5的规范状态终于变成了RECOMMENDATION。<a href="http://www.w3.org/blog/news/archives/4167" target="_blank" rel="external">HTML5 IS A W3C RECOMMENDATION英文原文</a>。</p>
<h2 id="接下来做什么">接下来做什么</h2>
<p>作为一个web开发者，特别是前端开发从业者，需要真正从自身开始，逐渐习惯使用html5标签了。</p>
<h2 id="html5布局基本demo">html5布局基本demo</h2>
<p>这里给出一个html5布局的基本demo，欢迎拍砖！<br>同样，你也可以在这里直接查看源码，不过repo里面包含一些基于gulp的工作流。<a href="https://github.com/myqianlan/f2e-workflow" target="_blank" rel="external">点击查看仓库</a></p>
<p>首先，给出图示“<br><img src="http://myqianlan.qiniudn.com/blog/2014/11/11/html5基本布局.png" alt="html5基本布局"></p>
<p>然后，给出相应的html代码</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>网站标题，控制在25个字、50个字节以内<span class="tag">&lt;/<span class="title">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"keywords"</span> <span class="attribute">content</span>=<span class="value">"关键词,5个左右,单个8汉字以内"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"description"</span> <span class="attribute">content</span>=<span class="value">"网站描述，字数尽量空制在80个汉字，160个字符以内！"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"X-UA-Compatible"</span> <span class="attribute">content</span>=<span class="value">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"viewport"</span> <span class="attribute">content</span>=<span class="value">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"http://cdn.bootcss.com/normalize/3.0.1/normalize.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span></div><div class="line">    	<span class="tag">body</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#f5f5f5</span></span></span>; <span class="rule">}</span></div><div class="line"></div><div class="line"><span class="tag">header</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#006dcc</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">35px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>; <span class="rule">}</span></div><div class="line"></div><div class="line"><span class="tag">nav</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>; <span class="rule">}</span></div><div class="line">  <span class="tag">nav</span> <span class="tag">li</span> <span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none</span></span>;</div><div class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> forestgreen</span></span>;</div><div class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</div><div class="line">    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">36px</span></span></span>;</div><div class="line">    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">36px</span></span></span>;</div><div class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">20%</span></span></span>; <span class="rule">}</span></div><div class="line"></div><div class="line"><span class="tag">section</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">300px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#006dcc</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">100px</span></span></span>; <span class="rule">}</span></div><div class="line"></div><div class="line"><span class="tag">aside</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> fixed</span></span>;</div><div class="line">  <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">0</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">226px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">300px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> forestgreen</span></span>; <span class="rule">}</span></div><div class="line"></div><div class="line"><span class="tag">footer</span> <span class="rules">{</span></div><div class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">80px</span></span></span>;</div><div class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> gray</span></span>; <span class="rule">}</span></div><div class="line">    <span class="tag">&lt;/<span class="title">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></div><div class="line">    &lt;style&gt;.browsehappy {margin: .2em;background: #ccc;color: #000;padding: .5em;}&lt;/style&gt;</div><div class="line">    &lt;p class="browsehappy"&gt;</div><div class="line">        您使用的浏览器 &lt;strong&gt;版本过低&lt;/strong&gt;</div><div class="line">        ，请</div><div class="line">        &lt;a href="http://browsehappy.com/"&gt;升级您的浏览器&lt;/a&gt;</div><div class="line">        以获得更好的体验。</div><div class="line">    &lt;/p&gt;</div><div class="line">    &lt;script src="http://cdn.bootcss.com/html5shiv/r29/html5.js"&gt;&lt;/script&gt;</div><div class="line">    &lt;![endif]--&gt;</div><div class="line">    <span class="comment">&lt;!-- CONTENT --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>hello world<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">header</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="title">nav</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>home<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>contact<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>about<span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">nav</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">section</span>&gt;</span>section</div><div class="line">    <span class="tag">&lt;<span class="title">article</span>&gt;</span><span class="tag">&lt;/<span class="title">article</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">article</span>&gt;</span><span class="tag">&lt;/<span class="title">article</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">aside</span>&gt;</span>aside<span class="tag">&lt;/<span class="title">aside</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">footer</span>&gt;</span>footer<span class="tag">&lt;/<span class="title">footer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<h2 id="迎接新时代">迎接新时代</h2>
<p>少年，尽情的迎接这个最坏的年代，这个最好的年代！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>html5，这个词语，不管是业内还是业外，都已经耳熟能详了。因为已经火了这么长的的时间了。但是，真正开始使用的又有多少人呢？只能用呵呵来形容了！]]>
    
    </summary>
    
      <category term="html5" scheme="http://myqianlan.com/tags/html5/"/>
    
      <category term="教程" scheme="http://myqianlan.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[偶感]]></title>
    <link href="http://myqianlan.com/2014/11/11/sometimes-i-thinks/"/>
    <id>http://myqianlan.com/2014/11/11/sometimes-i-thinks/</id>
    <published>2014-11-11T05:50:17.000Z</published>
    <updated>2014-11-16T11:25:19.000Z</updated>
    <content type="html"><![CDATA[<p>独自漫步于江南</p>
<p>曾只为拾起</p>
<p>前世的记忆与企盼<br><a id="more"></a></p>
<p>小桥流水</p>
<p>青瓦白墙</p>
<p>沿岸的足迹</p>
<p>却不曾</p>
<p>淡了，碎了</p>
<p>而故乡的一切</p>
<p>已化作了奢侈的回忆</p>
<p>从来不敢轻意翻起</p>
<p>碎裂的心</p>
<p>再也经不起</p>
<p>再也经不起</p>
<p>多少折腾</p>
<p>唯执笔的手，依旧</p>
<p>散落着</p>
<p>文字一地</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>独自漫步于江南</p>
<p>曾只为拾起</p>
<p>前世的记忆与企盼<br>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://myqianlan.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
